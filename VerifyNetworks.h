//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#ifndef VERIFY_NETWORKS_H
#define VERIFY_NETWORKS_H

#include <inttypes.h>
#include <algorithm>
#include "ArrayHelpers.h"

namespace verification
{

bool NextPermutation(int* first, int size)
{
	
}

int Sum(int* first, int arraySize)
{
	int result = 0;
	for (int i = 0; i < arraySize; i += 1)
	{
		result += arr[i];
	}
	return result;
}

bool VerifyNetwork(int size, void(*network)(int*,size_t))
{
	int* arr = (int*) malloc(sizeof(int) * size * 2);
	int* toSort = arr + size;
	int ones = 0;
	for (int index = 0; index < size; index += 1)
	{
		arr[index] = 0;
	}
	do
	{
		ones = Sum(arr, size);
		CopyArray(arr, toSort, size);
		network(toSort, size);
		if (__builtin_expect(!IsSorted(toSort, size) | ones != Sum(toSort, size), 0))
		{
			return false;
		}
	} while (NextPermutation(arr, size));

	return true;
}

}

#endif // VERIFY_NETWORKS_H
