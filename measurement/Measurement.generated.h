//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by CodeGeneration/Generate.cc
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


#ifndef MEASUREMENT_GENERATED_H
#define MEASUREMENT_GENERATED_H

#include <inttypes.h>
#include "../environment/Performancing.h"

namespace measurement
{
void MeasureSorting(Performancing* perf, uint64_t seed, int numberOfIterations, size_t arraySize, int measureIteration);
void MeasureSortingInRow(Performancing* perf, uint64_t seed, int numberOfIterations, size_t arraySize, int measureIteration);
void MeasureCompleteSorting(Performancing* perf, uint64_t seed, int numberOfIterations, size_t arraySize, int measureIteration);
void MeasureSampleSort(Performancing* perf, uint64_t seed, int numberOfIterations, size_t arraySize, int measureIteration);
void MeasureIpso_Def16(Performancing* perf, uint64_t seed, int numberOfIterations, size_t arraySize, int measureIteration);
void MeasureIpso_Def32(Performancing* perf, uint64_t seed, int numberOfIterations, size_t arraySize, int measureIteration);
void MeasureIpso_Hybrid_Best(Performancing* perf, uint64_t seed, int numberOfIterations, size_t arraySize, int measureIteration);
void MeasureIpso_Hybrid_BNRec(Performancing* perf, uint64_t seed, int numberOfIterations, size_t arraySize, int measureIteration);
void MeasureIpso_Std(Performancing* perf, uint64_t seed, int numberOfIterations, size_t arraySize, int measureIteration);
void MeasureIpso_Best_331_16(Performancing* perf, uint64_t seed, int numberOfIterations, size_t arraySize, int measureIteration);
void MeasureIpso_Best_331_32(Performancing* perf, uint64_t seed, int numberOfIterations, size_t arraySize, int measureIteration);
void MeasureIpso_Best_331_64(Performancing* perf, uint64_t seed, int numberOfIterations, size_t arraySize, int measureIteration);
void MeasureIpso_BNLoc_331_16(Performancing* perf, uint64_t seed, int numberOfIterations, size_t arraySize, int measureIteration);
void MeasureIpso_BNLoc_331_32(Performancing* perf, uint64_t seed, int numberOfIterations, size_t arraySize, int measureIteration);
void MeasureIpso_BNLoc_331_64(Performancing* perf, uint64_t seed, int numberOfIterations, size_t arraySize, int measureIteration);
void MeasureIpso_BNRec_331_16(Performancing* perf, uint64_t seed, int numberOfIterations, size_t arraySize, int measureIteration);
void MeasureIpso_BNRec_331_32(Performancing* perf, uint64_t seed, int numberOfIterations, size_t arraySize, int measureIteration);
void MeasureIpso_BNRec_331_64(Performancing* perf, uint64_t seed, int numberOfIterations, size_t arraySize, int measureIteration);
void MeasureIpso_Best_332_16(Performancing* perf, uint64_t seed, int numberOfIterations, size_t arraySize, int measureIteration);
void MeasureIpso_Best_332_32(Performancing* perf, uint64_t seed, int numberOfIterations, size_t arraySize, int measureIteration);
void MeasureIpso_Best_332_64(Performancing* perf, uint64_t seed, int numberOfIterations, size_t arraySize, int measureIteration);
void MeasureIpso_BNLoc_332_16(Performancing* perf, uint64_t seed, int numberOfIterations, size_t arraySize, int measureIteration);
void MeasureIpso_BNLoc_332_32(Performancing* perf, uint64_t seed, int numberOfIterations, size_t arraySize, int measureIteration);
void MeasureIpso_BNLoc_332_64(Performancing* perf, uint64_t seed, int numberOfIterations, size_t arraySize, int measureIteration);
void MeasureIpso_BNRec_332_16(Performancing* perf, uint64_t seed, int numberOfIterations, size_t arraySize, int measureIteration);
void MeasureIpso_BNRec_332_32(Performancing* perf, uint64_t seed, int numberOfIterations, size_t arraySize, int measureIteration);
void MeasureIpso_BNRec_332_64(Performancing* perf, uint64_t seed, int numberOfIterations, size_t arraySize, int measureIteration);
} // namespace measurement

#endif // MEASUREMENT_GENERATED_H
